{
    "interview": [
        {
            "question": "What is the output of '10'+20+30 in JavaScript?",
            "choices": ["102030", "1050", "60", "5010"],
            "correct": "1"
        },
        {
            "question": "What does the isNaN() function do?",
            "choices": ["Returns true, if the variable value is not a number.", "Returns false, if the variable value is not a number"],
            "correct": "1"
        },
        {
            "question": "Which of the following gives undefined value when executed?",
            "choices": ["var num;", "var num = '20'", "var num=10", "var num='apple'"],
            "correct": "1"
        },
        {
            "question": "Which of the following gives null, when executed?",
            "choices": ["String str=null;", "String str='null';","String str ='10'", "String str=''"],
            "correct": "1"
        },
        {
            "question": "How to change the background color of HTML document using JavaScript?",
            "choices": ["document.body.bgColor='pink';", "document.body.background='pink';", "document.body.background-color='pink';", "document.body.background:'pink'; " ],
            "correct": "1"
        },
        {
            "question": "If you have var y = 1, x = y = typeof x; What is the value of x?",
            "choices": ["true", "1","undefined","null"],
            "correct": "3"
        },
        {
            "question": "var a = (1, 5 - 1) * 2 what is the value of a?",
            "choices": ["4", "5","22","8"],
            "correct": "4"
        },
        {
            "question": "What is typeof []?",
            "choices": ["array", "undefined", "Object","null"],
            "correct": "1"
        },
        {
            "question": "What is the output of null == undefined?",
            "choices": ["true", "false", "undefined", "null"],
            "correct": "1"
        },
        {
            "question": "If var a = 2, b =3 what would be value of a && b",
            "choices": ["true", "3","5","undefined"],
            "correct": "2"
        },
        {
            "question": "What is the value of Math.max([2,3,4,5]);",
            "choices": ["true", "5","Nan","undefined"],
            "correct": "3"
        },
        {
            "question": "What would be consoled var foo = 'outside'; function logIt(){console.log(foo); var foo = 'inside';} logIt();",
            "choices": ["inside", "outsideinside","outside","undefined"],
            "correct": "4"
        },
        {
            "question": " How could you prevent a click on an anchor from going to the link?",
            "choices": ["preventDefault() inside event handler. ", "stopDefault() inside event handler","eventStop() inside event handler","removeDefault() inside event handler"],
            "correct": "1"
        },
        {
            "question": "How can you get all the texts in a web page?",
            "choices": ["document.body.innerText;", "html.body.innerText;","window.body.innerText;","window.html.innerText"],
            "correct": "1"
        },
        {
            "question": "var trees = ['xyz','xxxx','test','cyan','apple']; delete trees[3]; console.log(trees.length);",
            "choices": ["5", "4","3","undefined"],
            "correct": "1"
        },
        {
            "question": " What is the difference between the function declarations below? var foo = function(){ // Some code }; vs function bar(){ // Some code }; ",
            "choices": ["foo is defined at runtime, bar is defined at parsetime", "bar is defined at runtime, foo is defined at parse time","both are defined at runtime", "both are defined at parsetime"],
            "correct": "1"
        },
        {
            "question": "What would be the output of the following statements? var object1 = { same: 'same' }; var object2 = { same: 'same' }; console.log(object1 === object2);",
            "choices": ["true", "false","same","undefined"],
            "correct": "2"
        },
        {
            "question": "What would be the output of the following statements? var object1 = { same: 'same' }; var object2 = object1; console.log(object1 === object2);",
            "choices": ["true", "false","same","undefined"],
            "correct": "1"
        },
        {
            "question": "How do you submit a form using JavaScript?",
            "choices": ["document.forms[0].submit()", "document.submit()","forms[0].submit()","form = submit();"],
            "correct": "1"
        },
        {
            "question": "What is the  difference between window.onload and the jQuery $(document).ready() method?",
            "choices": ["window.onload method occurs after all the page elements have loaded(HTML, CSS, images), which can result in a delay and $(document).ready() method begins to run code as soon as the Document Object Model (DOM) is loaded, which should be faster and less prone to loading errors","both do exact same functions"],
            "correct": "1"
        },
        {
            "question": "What is the difference between setInterval() and setTimeout() functions?",
            "choices": ["setTimeout() will only execute the function once after the specified amount of time and setInterval() executes everytime after specified interval is done", "both do same stuff, can be used interchangeably","setInterval() doesn't take function as a parameter, setTimeout() takes function as parameter","setInterval accepts a function and millisecons, setTimeout only accepts function"],
            "correct": "1"
        }
    ]
}